{
  config,
  lib,
  pkgs,
  ...
}:
let
  inherit (lib)
    mkIf
    mkOption
    mkEnableOption
    mkPackageOption
    filterAttrs
    ;
  cfg = config.programs.youtube-music;
  readOnlyConfig = "${cfg.configFolderName}/${cfg.configFilePrefix}${cfg.configFileName}";
  writableConfig = "${cfg.configFolderName}/${cfg.configFileName}";
in
{
  options.programs.youtube-music = {
    enable = mkEnableOption "YouTube Music";
    package = mkPackageOption pkgs "youtube-music" { };
    url = mkOption { default = "https://music.youtube.com"; };
    version = mkOption {
      description = "Version used in migrations";
      default = "3.9.0";
    };
    configFolderName = mkOption {
      description = "Name of the config folder";
      default = "YouTube Music";
      internal = true;
    };
    configFileName = mkOption {
      description = "Name of the config file";
      default = "config.json";
      internal = true;
    };
    configFilePrefix = mkOption {
      description = "Prefix added to the config file generated by Home Manager";
      default = "home-manager-";
      internal = true;
    };
  };

  imports = [
    ./options.nix
    ./plugins
  ];

  config = mkIf cfg.enable {
    home.packages = [ cfg.package ];
    xdg.configFile."${readOnlyConfig}".text =
      let
        jsonOptions = builtins.toJSON (filterAttrs (n: v: v != null) cfg.options);
        jsonPlugins = builtins.toJSON cfg.plugins;
      in
      ''
        {
          "window-size": {
            "width": 1100,
            "height": 550
          },
          "window-maximized": false,
          "window-position": {
            "x": -1,
            "y": -1
          },
          "url": "${cfg.url}",
          "options": ${jsonOptions},
          "plugins": ${jsonPlugins},
          "__internal__": {
            "migrations": {
              "version": "${cfg.version}"
            }
          }
        }
      '';
    home.activation.updateYouTubeMusicConfig = lib.hm.dag.entryAfter [ "linkGeneration" ] ''
      cp ${config.xdg.configHome}/{"${readOnlyConfig}","${writableConfig}"}
      chmod u+w "${config.xdg.configHome}/${writableConfig}"
    '';
  };
}
